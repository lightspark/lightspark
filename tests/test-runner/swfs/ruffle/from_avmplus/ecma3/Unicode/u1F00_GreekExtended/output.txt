Unicode String.search from 0x1F00 to 0x1F00 PASSED!
Unicode String.search for 3 chars from 0x1F00 to 0x1F00 PASSED!
Unicode String.match PASSED!
Unicode String.split PASSED!
Unicode String.replace PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode String.search from 0x1FFB to 0x1FFB PASSED!
Unicode String.search for 3 chars from 0x1FFB to 0x1FFB PASSED!
Unicode String.match PASSED!
Unicode String.split PASSED!
Unicode String.replace PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Negative String.search PASSED!
0x1F00 to 0x1FFA String.search(undefined) PASSED!
0x1F00 to 0x1FFA String.search() PASSED!
Negative String.match PASSED!
0x1F00 to 0x1FFA String.match(undefined) PASSED!
0x1F00 to 0x1FFA String.match() PASSED!
String.split('') PASSED!
String.split(new RegExp()) PASSED!
String.split(new RegExp('')) PASSED!
String.split(undefined) result length PASSED!
String.split(undefined)[0] PASSED!
String.replace(0x1F000x1FFA) PASSED!
Negative String.search PASSED!
0x1FFB to 0x1FFF String.search(undefined) PASSED!
0x1FFB to 0x1FFF String.search() PASSED!
Negative String.match PASSED!
0x1FFB to 0x1FFF String.match(undefined) PASSED!
0x1FFB to 0x1FFF String.match() PASSED!
String.split('') PASSED!
String.split(new RegExp()) PASSED!
String.split(new RegExp('')) PASSED!
String.split(undefined) result length PASSED!
String.split(undefined)[0] PASSED!
String.replace(0x1FFB0x1FFF) PASSED!
