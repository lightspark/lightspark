---
  name: development-release
  on:
    push:
      branches:
        - master
      tags-ignore:
        - '**'

  jobs:

    delete_previous_release:
      name: Delete previous Development Release
      runs-on: ubuntu-latest
      continue-on-error: true
      steps:
        - uses: actions/checkout@v4
        - run: gh release delete latest --cleanup-tag -y
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    draft_release:
      name: Create Release
      runs-on: ubuntu-latest
      continue-on-error: false
      needs: delete_previous_release
      outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
      steps:
        - uses: actions/checkout@v4
        - name: Create Release
          id: create_release
          uses: ncipollo/release-action@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            bodyFile: ./.github/latest.md
            tag: latest
            name: "Development release"
            draft: false
            prerelease: true

    msys2_64:
      name: Windows 64-bit (msys2 Build)
      runs-on: windows-latest
      continue-on-error: false
      needs: draft_release
      env:
        CFLAGS: -std=c11
        CXXFLAGS: -std=c++14
      defaults:
        run:
          shell: msys2 {0}
      steps:
        - uses: msys2/setup-msys2@v2
          with:
            msystem: mingw64
            update: true
            install: >-
              mingw-w64-x86_64-toolchain
              mingw-w64-x86_64-cmake
              mingw-w64-x86_64-gcc
              mingw-w64-x86_64-ninja
              mingw-w64-x86_64-make
              mingw-w64-x86_64-cairo
              mingw-w64-x86_64-fontconfig
              mingw-w64-x86_64-libjpeg-turbo
              mingw-w64-x86_64-glew
              mingw-w64-x86_64-freetype
              mingw-w64-x86_64-curl
              mingw-w64-x86_64-rtmpdump
              mingw-w64-x86_64-ffmpeg
              mingw-w64-x86_64-SDL2
              mingw-w64-x86_64-nsis
              upx
              git
              base-devel
        - uses: actions/checkout@v4

        - name: Run msys2 Build
          run: |
            cmake -DCMAKE_BUILD_TYPE=Release .
            cmake --build .
            sed -i -e "s/Lightspark Team/The Lightspark Developers/g" CPackConfig.cmake
            cmake --install . --strip
            cmake --build . --target package
            mv -v Lightspark*exe Lightspark-latest-Installer-win64.exe

        - name: Upload Installer Release Asset
          uses: softprops/action-gh-release@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: latest
            files: Lightspark-latest-Installer-win64.exe

    msys2_32:
      name: Windows 32-bit (msys2 Build)
      runs-on: windows-latest
      continue-on-error: false
      needs: draft_release
      env:
        CFLAGS: -std=c11
        CXXFLAGS: -std=c++14
      defaults:
        run:
          shell: msys2 {0}
      steps:
        - uses: msys2/setup-msys2@v2
          with:
            msystem: mingw32
            update: true
            install: >-
              mingw-w64-i686-toolchain
              mingw-w64-i686-cmake
              mingw-w64-i686-gcc
              mingw-w64-i686-ninja
              mingw-w64-i686-make
              mingw-w64-i686-cairo
              mingw-w64-i686-fontconfig
              mingw-w64-i686-libjpeg-turbo
              mingw-w64-i686-glew
              mingw-w64-i686-freetype
              mingw-w64-i686-curl
              mingw-w64-i686-rtmpdump
              mingw-w64-i686-ffmpeg
              mingw-w64-i686-SDL2
              mingw-w64-i686-nsis
              upx
              git
              base-devel
        - uses: actions/checkout@v4

        - name: Run msys2 Build
          run: |
            cmake -DCMAKE_BUILD_TYPE=Release .
            cmake --build .
            sed -i -e "s/Lightspark Team/The Lightspark Developers/g" CPackConfig.cmake
            cmake --install . --strip
            cmake --build . --target package
            mv -v Lightspark*exe Lightspark-latest-Installer-win32.exe

        - name: Upload Installer Release Asset
          uses: softprops/action-gh-release@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: latest
            files: Lightspark-latest-Installer-win32.exe
    flatpak:
      name: Flatpak
      runs-on: ubuntu-latest
      needs: draft_release
      container:
        image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-24.08
        options: --privileged
      steps:
        - uses: actions/checkout@v4
        - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
          with:
            bundle: lightspark-latest.flatpak
            manifest-path: flatpak/org.lightspark.lightspark-latest.yaml
            cache-key: flatpak-builder-${{ github.sha }}

        - name: Upload Flatpak Release Asset
          uses: softprops/action-gh-release@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: latest
            files: lightspark-latest.flatpak
