<?xml version="1.0"?>
<mx:Application name="lightspark_geom_Matrix_test"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	applicationComplete="appComplete();"
	backgroundColor="white">

<mx:Script>
<![CDATA[
	import flash.display.DisplayObject;
	import flash.display.Sprite;
	import Tests;

	private function matrixEqual(m1:Matrix, m2:Matrix):Boolean {
		return m1.a == m2.a && m1.b == m2.b && m1.c == m2.c && m1.d == m2.d && m1.tx == m2.tx && m1.ty == m2.ty;
	}

	private function appComplete():void
	{
		var mat:Matrix = new Matrix();
		Tests.assertTrue(mat.a == 1 && mat.b == 0 && mat.c == 0 && mat.d == 1, "new Matrix()");
		
		var matc:Matrix = mat.clone();
		Tests.assertTrue(matrixEqual(mat, matc), "matrix.clone");

		var matm1:Matrix = new Matrix(1, 4, 2, 5, 3, 5);
		var matm2:Matrix = new Matrix(2, 4, 5, 7, 9, 11);
		var matm3:Matrix = new Matrix(22, 32, 29, 43, 40, 58);
		matm1.concat(matm2);
		Tests.assertTrue(matrixEqual(matm1, matm3), "matrix.concat");

		mat.a = 50; mat.b = 60; mat.c = 5; mat.d = 100;
		mat.identity();
		Tests.assertTrue(mat.a == 1 && mat.b == 0 && mat.c == 0 && mat.d == 1, "Matrix.identity");
		
		var mat2:Matrix = new Matrix();
		mat2.rotate(Math.PI / 2);
		Tests.assertTrue(mat2.a == 0 && mat2.b == 1 && mat2.c == -1 && mat2.d == 0, "Matrix.rotate");
		
		var mat3:Matrix = new Matrix();
		mat3.scale(4, 2);
		Tests.assertTrue(mat3.a == 4 && mat3.b == 0 && mat3.c == 0 && mat3.d == 2, "Matrix.scale");
		
		var mat4:Matrix = new Matrix();
		mat4.translate(4, 2);
		Tests.assertTrue(mat4.tx == 4 && mat4.ty == 2, "Matrix.translate");

		var mati1:Matrix = new Matrix(1, 4, 2, 5, 0, 0);
		var mati2:Matrix = mati1.clone();
		mati2.invert();
		mati1.concat(mati2);
		Tests.assertTrue(matrixEqual(mati1, new Matrix(1, 0, 0, 1, 0, 0)), "matrix.invert");

		Tests.report(visual, this.name);
	}
]]>
</mx:Script>

<mx:UIComponent id="visual" />

</mx:Application>



