/// var a_bool: Vector.<Boolean> = new <Boolean>[true, false];
/// var b_bool: Vector.<Boolean> = new <Boolean>[false, true, false];
/// var c_bool = a_bool.concat(b_bool);
/// (contents of c_bool...)
///length:  5
true
false
false
true
false
/// var a_class: Vector.<Superclass> = new <Superclass>[];
/// a_class.length = 2;
/// a_class[0] = new Superclass();
/// a_class[1] = new Subclass();
/// var b_class: Vector.<Subclass> = new <Subclass>[];
/// b_class.length = 1;
/// b_class[0] = new Subclass();
/// var c_class = a_class.concat(b_class);
/// (contents of c_class...)
///length:  3
[object Superclass]
[object Subclass]
[object Subclass]
var c_class_flipped = b_class.concat(new<Superclass>[new Subclass()]);
/// (contents of c_class_flipped...)
///length:  2
[object Subclass]
[object Subclass]
/// var a_iface: Vector.<Interface> = new <Interface>[];
/// a_iface.length = 1;
/// a_iface[0] = new Implementer();
/// var b_iface: Vector.<Implementer> = new <Implementer>[];
/// b_iface.length = 1;
/// b_iface[0] = new Implementer();
/// var c_iface = a_iface.concat(b_iface);
/// (contents of c_iface...)
///length:  2
[object Implementer]
[object Implementer]
/// var a_int: Vector.<int> = new <int>[1,2];
/// var b_int: Vector.<int> = new <int>[5,16];
/// var c_int = a_int.concat(b_int);
/// (contents of c_int...)
///length:  4
1
2
5
16
/// var a_number: Vector.<Number> = new <Number>[1,2,3,4];
/// var b_number: Vector.<Number> = new <Number>[5, NaN, -5, 0];
/// var c_number = a_number.concat(b_number);
/// (contents of c_number...)
///length:  8
1
2
3
4
5
NaN
-5
0
/// var a_string: Vector.<String> = new <String>["a","c","d","f"];
/// var b_string: Vector.<String> = new <String>["986","B4","Q","rrr"];
/// var c_string = a_string.concat(b_string);
/// (contents of c_string...)
///length:  8
a
c
d
f
986
B4
Q
rrr
/// var a_uint: Vector.<uint> = new <uint>[1,2];
/// var b_uint: Vector.<uint> = new <uint>[5,16];
/// var c_uint = a_uint.concat(b_uint);
/// (contents of c_uint...)
///length:  4
1
2
5
16
/// var a_vector:Vector.<Vector.<int>> = new <Vector.<int>>[new <int>[1,2]];
/// var b_vector:Vector.<Vector.<int>> = new <Vector.<int>>[new <int>[5,16]];
/// var c_vector = a_vector.concat(b_vector)
/// (contents of c_vector...)
///length:  2
1,2
5,16
