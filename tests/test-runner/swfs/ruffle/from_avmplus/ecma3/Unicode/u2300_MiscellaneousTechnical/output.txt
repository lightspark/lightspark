Unicode String.search from 0x2300 to 0x2300 PASSED!
Unicode String.search for 3 chars from 0x2300 to 0x2300 PASSED!
Unicode String.match PASSED!
Unicode String.split PASSED!
Unicode String.replace PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode String.search from 0x23FB to 0x23FB PASSED!
Unicode String.search for 3 chars from 0x23FB to 0x23FB PASSED!
Unicode String.match PASSED!
Unicode String.split PASSED!
Unicode String.replace PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Negative String.search PASSED!
0x2300 to 0x23FA String.search(undefined) PASSED!
0x2300 to 0x23FA String.search() PASSED!
Negative String.match PASSED!
0x2300 to 0x23FA String.match(undefined) PASSED!
0x2300 to 0x23FA String.match() PASSED!
String.split('') PASSED!
String.split(new RegExp()) PASSED!
String.split(new RegExp('')) PASSED!
String.split(undefined) result length PASSED!
String.split(undefined)[0] PASSED!
String.replace(0x23000x23FA) PASSED!
Negative String.search PASSED!
0x23FB to 0x23FF String.search(undefined) PASSED!
0x23FB to 0x23FF String.search() PASSED!
Negative String.match PASSED!
0x23FB to 0x23FF String.match(undefined) PASSED!
0x23FB to 0x23FF String.match() PASSED!
String.split('') PASSED!
String.split(new RegExp()) PASSED!
String.split(new RegExp('')) PASSED!
String.split(undefined) result length PASSED!
String.split(undefined)[0] PASSED!
String.replace(0x23FB0x23FF) PASSED!
