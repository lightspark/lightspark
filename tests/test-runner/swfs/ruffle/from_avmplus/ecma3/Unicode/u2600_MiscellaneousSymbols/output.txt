Unicode String.search from 0x2600 to 0x2600 PASSED!
Unicode String.search for 3 chars from 0x2600 to 0x2600 PASSED!
Unicode String.match PASSED!
Unicode String.split PASSED!
Unicode String.replace PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode String.search from 0x26FB to 0x26FB PASSED!
Unicode String.search for 3 chars from 0x26FB to 0x26FB PASSED!
Unicode String.match PASSED!
Unicode String.split PASSED!
Unicode String.replace PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Unicode Split on Mark PASSED!
Negative String.search PASSED!
0x2600 to 0x26FA String.search(undefined) PASSED!
0x2600 to 0x26FA String.search() PASSED!
Negative String.match PASSED!
0x2600 to 0x26FA String.match(undefined) PASSED!
0x2600 to 0x26FA String.match() PASSED!
String.split('') PASSED!
String.split(new RegExp()) PASSED!
String.split(new RegExp('')) PASSED!
String.split(undefined) result length PASSED!
String.split(undefined)[0] PASSED!
String.replace(0x26000x26FA) PASSED!
Negative String.search PASSED!
0x26FB to 0x26FF String.search(undefined) PASSED!
0x26FB to 0x26FF String.search() PASSED!
Negative String.match PASSED!
0x26FB to 0x26FF String.match(undefined) PASSED!
0x26FB to 0x26FF String.match() PASSED!
String.split('') PASSED!
String.split(new RegExp()) PASSED!
String.split(new RegExp('')) PASSED!
String.split(undefined) result length PASSED!
String.split(undefined)[0] PASSED!
String.replace(0x26FB0x26FF) PASSED!
