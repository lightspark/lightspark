/// var a_bool: Vector.<Boolean> = new <Boolean>[true, false];
/// var b_bool: Vector.<Boolean> = new <Boolean>[true, true];
/// a_bool.indexOf(true);
0
/// a_bool.indexOf(false));
1
/// b_bool.indexOf(true);
0
/// b_bool.indexOf(false);
-1
/// a_bool.indexOf(true, 1);
-1
/// a_bool.indexOf(false, 1));
1
/// b_bool.indexOf(true, 1);
1
/// b_bool.indexOf(false, 1);
-1
/// a_bool.indexOf(true, 0);
0
/// a_bool.indexOf(false, 0));
1
/// b_bool.indexOf(true, 0);
0
/// b_bool.indexOf(false, 0);
-1
/// var a_class: Vector.<Superclass> = new <Superclass>[];
/// a_class.length = 2;
/// var a0_class = new Superclass();
/// a_class[0] = a0_class;
/// var a1_class = new Subclass();
/// a_class[1] = a1_class;
/// var b_class: Vector.<Subclass> = new <Subclass>[];
/// b_class.length = 1;
/// var b0_class = new Subclass();
/// b_class[0] = b0_class;
/// a_class.indexOf(a0_class);
0
/// a_class.indexOf(a1_class);
1
/// a_class.indexOf(b0_class);
-1
/// b_class.indexOf(a0_class);
-1
/// b_class.indexOf(a1_class);
-1
/// b_class.indexOf(b0_class);
0
/// a_class.indexOf(a0_class, 0);
0
/// a_class.indexOf(a1_class, 0);
1
/// a_class.indexOf(b0_class, 0);
-1
/// b_class.indexOf(a0_class, 0);
-1
/// b_class.indexOf(a1_class, 0);
-1
/// b_class.indexOf(b0_class, 0);
0
/// a_class.indexOf(a0_class, -1);
-1
/// a_class.indexOf(a1_class, -1);
1
/// a_class.indexOf(b0_class, -1);
-1
/// b_class.indexOf(a0_class, -1);
-1
/// b_class.indexOf(a1_class, -1);
-1
/// b_class.indexOf(b0_class, -1);
0
/// var a_int: Vector.<int> = new <int>[1,2];
/// var b_int: Vector.<int> = new <int>[5,16];
/// a_int.indexOf(0);
-1
/// a_int.indexOf(1);
0
/// a_int.indexOf(2);
1
/// b_int.indexOf(3);
-1
/// b_int.indexOf(5);
0
/// b_int.indexOf(15);
-1
/// a_int.indexOf(0, 0);
-1
/// a_int.indexOf(1, 0);
0
/// a_int.indexOf(2, 0);
1
/// b_int.indexOf(3, 0);
-1
/// b_int.indexOf(5, 0);
0
/// b_int.indexOf(15, 0);
-1
/// a_int.indexOf(0, -2);
-1
/// a_int.indexOf(1, -2);
0
/// a_int.indexOf(2, -2);
1
/// b_int.indexOf(3, -2);
-1
/// b_int.indexOf(5, -2);
0
/// b_int.indexOf(15, -2);
-1
/// var a_number: Vector.<Number> = new <Number>[1,2,3,4];
/// var b_number: Vector.<Number> = new <Number>[5, NaN, -5, 0];
/// a_number.indexOf(0);
-1
/// a_number.indexOf(1);
0
/// a_number.indexOf(2);
1
/// b_number.indexOf(3);
-1
/// b_number.indexOf(-5);
2
/// b_number.indexOf(NaN);
-1
/// a_number.indexOf(0, 1);
-1
/// a_number.indexOf(1, 1);
-1
/// a_number.indexOf(2, 1);
1
/// b_number.indexOf(3, 1);
-1
/// b_number.indexOf(-5, 1);
2
/// b_number.indexOf(NaN, 1);
-1
/// a_number.indexOf(0, -2);
-1
/// a_number.indexOf(1, -2);
-1
/// a_number.indexOf(2, -2);
-1
/// b_number.indexOf(3, -2);
-1
/// b_number.indexOf(-5, -2);
2
/// b_number.indexOf(NaN, -2);
-1
/// var a_string: Vector.<String> = new <String>["a","c","d","f"];
/// var b_string: Vector.<String> = new <String>["986","B4","Q","rrr"];
/// a_string.indexOf("a");
0
/// a_string.indexOf("z");
-1
/// a_string.indexOf("d");
2
/// b_string.indexOf(986);
-1
/// b_string.indexOf("986");
0
/// b_string.indexOf("Q");
2
/// a_string.indexOf("a", -2);
-1
/// a_string.indexOf("z", -2);
-1
/// a_string.indexOf("d", -2);
2
/// b_string.indexOf(986, -2);
-1
/// b_string.indexOf("986", -2);
-1
/// b_string.indexOf("Q", -2);
2
/// a_string.indexOf("a", 2);
-1
/// a_string.indexOf("z", 2);
-1
/// a_string.indexOf("d", 2);
2
/// b_string.indexOf(986, 2);
-1
/// b_string.indexOf("986", 2);
-1
/// b_string.indexOf("Q", 2);
2
/// var a_uint: Vector.<uint> = new <uint>[1,2];
/// var b_uint: Vector.<uint> = new <uint>[5,16];
/// a_uint.indexOf(0);
-1
/// a_uint.indexOf(1);
0
/// a_uint.indexOf(2);
1
/// b_uint.indexOf(3);
-1
/// b_uint.indexOf(5);
0
/// b_uint.indexOf(12);
-1
/// a_uint.indexOf(0, 1);
-1
/// a_uint.indexOf(1, 1);
-1
/// a_uint.indexOf(2, 1);
1
/// b_uint.indexOf(3, 1);
-1
/// b_uint.indexOf(5, 1);
-1
/// b_uint.indexOf(12, 1);
-1
/// a_uint.indexOf(0, -1);
-1
/// a_uint.indexOf(1, -1);
-1
/// a_uint.indexOf(2, -1);
1
/// b_uint.indexOf(3, -1);
-1
/// b_uint.indexOf(5, -1);
-1
/// b_uint.indexOf(12, -1);
-1
/// var a0_vector = new <int>[1,2];
/// var a1_vector = new <int>[4,3];
/// var a_vector:Vector.<Vector.<int>> = new <Vector.<int>>[a0_vector, a1_vector];
/// var b0_vector = new <int>[5,16];
/// var b1_vector = new <int>[19,8];
/// var b_vector:Vector.<Vector.<int>> = new <Vector.<int>>[b0_vector, b1_vector];
/// a_vector.indexOf(a0_vector)
0
/// a_vector.indexOf(a1_vector)
1
/// a_vector.indexOf(new <int>[4,3])
-1
/// a_vector.indexOf(b0_vector)
-1
/// a_vector.indexOf(b1_vector)
-1
/// a_vector.indexOf(new <int>[19,8])
-1
/// b_vector.indexOf(a0_vector)
-1
/// b_vector.indexOf(a1_vector)
-1
/// b_vector.indexOf(new <int>[4,3])
-1
/// b_vector.indexOf(b0_vector)
0
/// b_vector.indexOf(b1_vector)
1
/// b_vector.indexOf(new <int>[19,8])
-1
/// a_vector.indexOf(a0_vector, 0)
0
/// a_vector.indexOf(a1_vector, 0)
1
/// a_vector.indexOf(new <int>[4,3], 0)
-1
/// a_vector.indexOf(b0_vector, 0)
-1
/// a_vector.indexOf(b1_vector, 0)
-1
/// a_vector.indexOf(new <int>[19,8], 0)
-1
/// b_vector.indexOf(a0_vector, 0)
-1
/// b_vector.indexOf(a1_vector, 0)
-1
/// b_vector.indexOf(new <int>[4,3], 0)
-1
/// b_vector.indexOf(b0_vector, 0)
0
/// b_vector.indexOf(b1_vector, 0)
1
/// b_vector.indexOf(new <int>[19,8], 0)
-1
/// a_vector.indexOf(a0_vector, -1)
-1
/// a_vector.indexOf(a1_vector, -1)
1
/// a_vector.indexOf(new <int>[4,3], -1)
-1
/// a_vector.indexOf(b0_vector, -1)
-1
/// a_vector.indexOf(b1_vector, -1)
-1
/// a_vector.indexOf(new <int>[19,8], -1)
-1
/// b_vector.indexOf(a0_vector, -1)
-1
/// b_vector.indexOf(a1_vector, -1)
-1
/// b_vector.indexOf(new <int>[4,3], -1)
-1
/// b_vector.indexOf(b0_vector, -1)
-1
/// b_vector.indexOf(b1_vector, -1)
1
/// b_vector.indexOf(new <int>[19,8], -1)
-1
