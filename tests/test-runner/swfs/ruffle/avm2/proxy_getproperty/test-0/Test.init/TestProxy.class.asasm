class
 refid "Test/init/TestProxy"
 instance QName(PrivateNamespace("Test.as$38"), "TestProxy")
  extends QName(PackageNamespace("flash.utils"), "Proxy")
  flag PROTECTEDNS
  protectedns ProtectedNamespace("Test.as$38:TestProxy")
  iinit
   name "Test.as$38:TestProxy/TestProxy"
   refid "Test/init/TestProxy/instance/init"
   body
    maxstack 1
    localcount 1
    initscopedepth 5
    maxscopedepth 6
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     debugfile           "I:\\Code\\ruffle\\tests\\tests\\swfs\\avm2\\proxy_getproperty;;Test.as"
     debugline           75
     returnvoid
    end ; code
   end ; body
  end ; method
  trait method QName(Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"), "getProperty") flag OVERRIDE
   method
    name "Test.as$38:TestProxy/flash_proxy:getProperty"
    refid "Test/init/TestProxy/instance/http://www.adobe.com/2006/actionscript/flash/proxy:getProperty"
    param null
    flag HAS_PARAM_NAMES
    paramname null
    body
     maxstack 3
     localcount 2
     initscopedepth 5
     maxscopedepth 6
     code
      debugfile           "I:\\Code\\ruffle\\tests\\tests\\swfs\\avm2\\proxy_getproperty;;Test.as"
      debugline           9
      getlocal0
      pushscope

      debug               1, "name", 0, 9
      debugline           10
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///attempted to get property:"
      getlocal1
      callpropvoid        QName(PackageNamespace(""), "trace"), 2

      debugline           12
      getlocal1
      getlex              QName(PackageNamespace(""), "QName")
      istypelate
      iffalse             L38

      debugline           13
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///type of name is QName"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      debugline           15
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///name.localName"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      debugline           16
      findpropstrict      QName(PackageNamespace(""), "trace")
      getlocal1
      getproperty         Multiname("localName", [PackageNamespace(""), PrivateNamespace("Test.as$38:TestProxy"), PrivateNamespace("Test.as$38"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("Test.as$38:TestProxy"), StaticProtectedNs("Test.as$38:TestProxy"), StaticProtectedNs("flash.utils:Proxy")])
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      debugline           18
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///name.uri"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      debugline           19
      findpropstrict      QName(PackageNamespace(""), "trace")
      getlocal1
      getproperty         Multiname("uri", [PackageNamespace(""), PrivateNamespace("Test.as$38:TestProxy"), PrivateNamespace("Test.as$38"), Namespace("http://adobe.com/AS3/2006/builtin"), ProtectedNamespace("Test.as$38:TestProxy"), StaticProtectedNs("Test.as$38:TestProxy"), StaticProtectedNs("flash.utils:Proxy")])
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      jump                L52

L38:
      debugline           20
      getlocal1
      getlex              QName(PackageNamespace(""), "String")
      istypelate
      iffalse             L48

      debugline           21
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///type of name is String"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      jump                L52

L48:
      debugline           23
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///invalid name type"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

L52:
      pushstring          "This is a proxy var"
      debugline           26
      returnvalue
     end ; code
    end ; body
   end ; method
  end ; trait
  trait method QName(PackageNamespace(""), "normal_fn")
   method
    name "Test.as$38:TestProxy/normal_fn"
    refid "Test/init/TestProxy/instance/normal_fn"
    body
     maxstack 2
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      debugfile           "I:\\Code\\ruffle\\tests\\tests\\swfs\\avm2\\proxy_getproperty;;Test.as"
      debugline           29
      getlocal0
      pushscope

      debugline           30
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///called normal_fn"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      debugline           31
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait slot QName(PrivateNamespace("Test.as$38"), "normal_var") value Utf8("This is a normal var") end
  trait method QName(Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"), "proxy_fn")
   method
    name "Test.as$38:TestProxy/flash_proxy:proxy_fn"
    refid "Test/init/TestProxy/instance/http://www.adobe.com/2006/actionscript/flash/proxy:proxy_fn"
    body
     maxstack 2
     localcount 1
     initscopedepth 5
     maxscopedepth 6
     code
      debugfile           "I:\\Code\\ruffle\\tests\\tests\\swfs\\avm2\\proxy_getproperty;;Test.as"
      debugline           35
      getlocal0
      pushscope

      debugline           36
      findpropstrict      QName(PackageNamespace(""), "trace")
      pushstring          "///called proxy_fn"
      callpropvoid        QName(PackageNamespace(""), "trace"), 1

      debugline           37
      returnvoid
     end ; code
    end ; body
   end ; method
  end ; trait
  trait slot QName(Namespace("http://www.adobe.com/2006/actionscript/flash/proxy"), "proxy_var") value Utf8("This is a normal var in the proxy ns") end
 end ; instance
 cinit
  name ""
  refid "Test/init/TestProxy/class/init"
  body
   maxstack 1
   localcount 1
   initscopedepth 4
   maxscopedepth 5
   code
    getlocal0
    pushscope

    returnvoid
   end ; code
  end ; body
 end ; method
end ; class
