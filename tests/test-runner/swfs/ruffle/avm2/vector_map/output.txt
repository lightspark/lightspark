/// var a_bool: Vector.<Boolean> = new <Boolean>[true, false];
/// var b_bool: Vector.<Boolean> = new <Boolean>[true, true];
/// a_bool.map(function(v) { return v; });
2 elements
true
false
/// a_bool.map(function(v) { return !v; });
2 elements
false
true
/// b_bool.map(function(v) { return v; });
2 elements
true
true
/// b_bool.map(function(v) { return !v; });
2 elements
false
false
/// var a_class: Vector.<Superclass> = new <Superclass>[];
/// a_class.length = 2;
/// a_class[0] = new Superclass();
/// a_class[1] = new Subclass();
/// var b_class: Vector.<Subclass> = new <Subclass>[];
/// b_class.length = 1;
/// b_class[0] = new Subclass();
/// a_class.map(function (v) { return new Superclass(); }));
[object Superclass],[object Superclass]
/// a_class.map(function (v) { return new Superclass(); }));
[object Superclass],[object Superclass]
/// b_class.map(function (v) { return new Subclass(); }));
[object Subclass]
/// b_class.map(function (v) { return new Subclass(); }));
[object Subclass]
/// var a_int: Vector.<int> = new <int>[1,2];
/// var b_int: Vector.<int> = new <int>[5,16];
/// a_int.map(function (v) { return v * 2; }));
2,4
/// a_int.map(function (v) { return v * -.5; }));
0,-1
/// b_int.map(function (v) { return v * 3; }));
15,48
/// b_int.map(function (v) { return v * -6; }));
-30,-96
/// var a_number: Vector.<Number> = new <Number>[1,2,3,4];
/// var b_number: Vector.<Number> = new <Number>[5, NaN, -5, 0];
/// a_number.map(function (v) { return "6"; }));
6,6,6,6
/// a_number.map(function (v) { return v * 6; }));
6,12,18,24
/// b_number.map(function (v) { return v * -1; }));
-5,NaN,5,0
/// b_number.map(function (v) { return v * -2; }));
-10,NaN,10,0
/// b_number.map(function (v) { return v * -6; }));
-30,NaN,30,0
/// var a_string: Vector.<String> = new <String>["a","c","d","f"];
/// var b_string: Vector.<String> = new <String>["986","B4","Q","rrr"];
/// a_string.map(function (v) { return v.length; }));
1,1,1,1
/// a_string.map(function (v) { return v + " and"; }));
a and,c and,d and,f and
/// b_string.map(function (v) { return v.length; }));
3,2,1,3
/// b_string.map(function (v) { return v + "6"; }));
9866,B46,Q6,rrr6
/// var a_uint: Vector.<uint> = new <uint>[1,2];
/// var b_uint: Vector.<uint> = new <uint>[5,16];
/// a_uint.map(function (v) { return v * -1; }));
4294967295,4294967294
/// a_uint.map(function (v) { return v * -0.5; }));
0,4294967295
/// b_uint.map(function (v) { return v * 3; }));
15,48
/// b_uint.map(function (v) { return v * -6; }));
4294967266,4294967200
/// var a_vector:Vector.<Vector.<int>> = new <Vector.<int>>[new <int>[1,2], new <int>[4,3]];
/// var b_vector:Vector.<Vector.<int>> = new <Vector.<int>>[new <int>[5,16], new <int>[19,8]];
/// a_vector.map(function (v) { return v.map(function (v) { return v * -6; }); });
-6,-12,-24,-18
/// a_vector.map(function (v) { return v.map(function (v) { return v * 2; }); });
2,4,8,6
/// b_vector.map(function (v) { return v.map(function (v) { return v * 4; }); });
20,64,76,32
/// b_vector.map(function (v) { return v.map(function (v) { return v * 6.5; }); });
32,104,123,52
